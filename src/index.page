---
title: Home
directoryName: erlware
---
# Erlware is now BETA!!  Test and submit bugs

Free and open source Erlware is software that makes writing Erlang/OTP
applications easy. At the core of Erlware are our build system and our
package management tool; Sinan (our flagship buildsystem) and Faxien
our package management tool. Sinan, and Faxien support and encourage
OTP application and release structure. All systems embody the
[Erlang/OTP design principles](http://www.erlang.org/doc/design_principles/part_frame.html).


# Erlware Quick Start

## Step 1: Get Faxien
 [Download](http://code.google.com/p/faxien/downloads/list) the
platform specific Faxien boostrapper from
http://code.google.com/p/faxien/downloads/list then run


    $ sudo sh ./faxien-bootstrap-<platform>.sh


## Step 2: Install Sinan
 Type


    $ sudo /usr/local/erlware/bin/faxien install sinan.


# In Depth Start (The Full Cycle Tutorial)

For a more in depth look at how you can use Sinan and Faxien take a
look at our tutorial on the full cycle of Erlang/OTP development which
can be found within [The Full Development Cycle]({relocatable: tutorials/full-development-cycle.page} "A tutorial about using Sinan and Faxien") tutorial.


# Intent

Helping to create a system of leadership for the Erlang open source
community.

The open source community looks to Ericsson to provide it with
direction.  As much as we love them Ericsson is a business not an open
source initiative. The open source community needs to provide its own
leadership. Fortunately, we can control our own destinies. We can
drive development without a branching of the Erlang community or code
base. To accomplish this end we must set a few goals for ourselves.

  * Allow Erlang to move forward on its own
  * Allow community driven evolution of the language/platform
  * Make the language/platform accessible to reasonably competent programmers

Our first task will be to create a level playing field for both those
applications distributed with Erlang and those created and supported
by the community. Right now we have those applications distributed
with Erlang and open source applications spread all over the
place. Some of these open source apps are in the "user contrib"
section of erlang.org, others are at "Process One", still others are
in the contrib section of trapexit and even more are in jungerl or on
private blogs. Worse yet some projects have multiple version in
multiple places. This is detrimental to the Erlang community. We have
created a canonical store for Erlang applications. Our first stab at
resolving this issue is our [Repository]({relocatable:
documentation/repository-layout.page} "Documentation about the
repository layout and setup").

We believe it would be of great value to the Erlang community if
someone were able to develop a standard way to package Erlang
applications and releases for distribution. Tools can then be created
to easily pull packages from the repository. This will allow apps like
erlrt, the Erlang maven project, build tools, etc.  Making a striped
down version 'core' of Erlang available and loading those libraries
that are usually distributed with Erlang as well as open source
packages into the repository and making them available as needed gives
us a flexible and level playing field in which to work.

We also seek to provide some method for the community to drive the
development of Erlang and its libraries. There isn't much we can do
about the core of the language, we don't want to branch
Erlang. However, we can provide alternate cleaned up and standardized
versions of the standard apps distributed with Erlang. Considering our
new level playing field this would allow us to fix a lot of the
inconsistencies in the standard libraries as part of this
process. Fortunately, this is a common problem for languages and we
have many examples of processes that other languages have used to
solve the problem. Python has the PEP process, Scheme has the SRFIs,
the networking world has the RFC, etc. In fact Per Gustaffsson has
already started this process with
[EEPs](http://www.erlang.org/pipermail/erlang-questions/2007-January/024999.html)

It is our hope and the hope of the other developers who have worked on
this website that we can tackle the problems of having multiple
versions of Erlang spread across different websites, establish
availability of standardized tools, and in general level the playing
field between the Erlang open source community and Ericsson Erlang.

# Credits

## Founders

Martin Logan & Eric Merritt

## Site Layout & Graphic Design

Jeremy Hlinak (main designer) http://www.cdform.com/ \\
Eric Merritt \\
Martin Logan

## Contributors

Last but not least many thanks to all the others that have helped us by finding bugs, submitting patches, and otherwise supporting Erlware.
