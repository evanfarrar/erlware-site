---
title: Command List
directoryName: Faxien
inMenu: true
---


# Frequently Used Command Summary

To find out about other faxien command type `faxien help commands` from the commandline. 

## help

    $ faxien help
    $ faxien help commands
    $ faxien help <command>

Prints out help information for Faxien.

## search

    $faxien list [search_type] [pattern]

Prints out all the packages that have the pattern specified.  If no pattern is provided it lists all available applications and releases. Search type can be either 'normal' or 'regexp'.  A normal search like the following

    $ faxien list yaw

would yield "yaws" as a result.

    $ faxien list regexp y[aw]*s

would also yeild "yaws", though why anyone would ever type such a thing I don't know.

## install

    $ faxien install <release_name|path_to_package> [version]

This command fetches a release from a respository and installs it onto the local file system if you specify a release name. The default location is /usr/local/erlware.  If you specify the path to an untarred package or a tarred package with the extension .tar.gz Faxien will install that package from the hard disk.

**Example Usage**

    $ faxien install sinan  ## Installs the release from a remote repository
    $ faxien install /home/martin/sinan.tar.gz  ## installs a local release tarball


## install-app

    $ faxien install-app <app_name|path_to_app_package> \[version\]

This command fetches an application from a respository and installs it onto the local file system.  This will also install an application package from the local file system.

**Example Usage**

    $ faxien install-app fslib  ## Installs the application from a remote repository
    $ faxien install-app fslib 5.7.3 ## Installs version 5.7.3 of the application from a remote repository
    $ faxien install-app /home/martin/fslib.tar.gz  ## installs a local application tarball


## publish

    $ faxien publish [repo_url] <path_to_app_or_release> [request_timeout]

Publishes a pre-built application or a release to a remote 
repository. This function tries to infer whether the package is a
architecture specific application, a platform independent application,
or a release. Release packages follow the structure for releases as
outlined by erlware.org.  A release directory must be of the form
<release_name>-<release_vsn> in order to be published.  An application
directory may be of that form but does not have to be as this function
will determine the version number via the app file provided in the
ebin directory of the application. Once published the code is then
available for immediate use by any application is erlware repo
compatible such as Sinan.

**Note*** Timeout values are in milliseconds

**Example Usage**

    $ faxien publish /home/martin/my_app.tar.gz  ## Publish a tarred application package to the configured default remote repo
    $ faxien publish /home/martin/my_release 10000  ## Publish an untarred release package to the configured default remote repo with a request timeout of 10 seconds
    $ faxien publish http://erlware.org/pub /home/martin/my_release  ## publish an untarred release package to a specific remote repository

